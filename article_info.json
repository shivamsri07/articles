[
    {
        "id": "1",
        "category": ["system design"],
        "uid": "online-offline-indicator",
        "title": "Design online/offline indicator",
        "description": "Any system that is designed can scale in multiple ways, and as with everything in the world, there is no free lunch...",
        "href": "articles/online-offline-indicator",
        "href_title": "online-offline-indicator",
        "img": "https://user-images.githubusercontent.com/12581295/196560127-37e4ecff-3d18-47c2-b88e-e598ac37d498.png",
        "img_alt": "online-offline-indicator",
        "date": "12th October'2022",
        "views": "80 views",
        "keywords": "system design online-offline indicator, design online offline indicator, indicator chat design"
    },
    {
        "id": "2",
        "category": ["database internals"],
        "uid": "lsm-trees",
        "title": "Log Structured Merge tree",
        "description": "Ever wondered how Cassandra, RocksDB offer such high write throughput, or how systems with high ingestion rates...",
        "href": "articles/lsm-trees",
        "href_title": "lsm-trees",
        "img": "https://user-images.githubusercontent.com/12581295/196652172-904b6a6e-3890-4ac1-9a5d-05981bd9fdfa.png",
        "img_alt": "lsm-trees",
        "date": "19th October'2022",
        "views": "120 views",
        "keywords": "lsm trees, log structured trees, log trees, log structured merge trees"
    },
    {
        "id": "3",
        "category": ["system design", "data structure"],
        "uid": "reverse-image-search",
        "title": "How Canva designed a scalable reverse image search system",
        "description": "Canva has a huge media database. And as the files grow in number, there comes a need to tackle the problem of moderation and deduplication at scale...",
        "href": "articles/reverse-image-search",
        "href_title": "reverse-image-search",
        "img": "https://user-images.githubusercontent.com/12581295/197418269-484a3d6d-5b26-4b33-8595-19100467c2d3.png",
        "img_alt": "reverse-image-search",
        "date": "23rd October'2022",
        "views": "239 views",
        "keywords": "reverse img search, canva reverse image search, perceptual hashing, multi-index hash, system design content matching, phash"
    },
    {
        "id": "4",
        "category": ["system design", "networking"],
        "uid": "load-balancer",
        "title": "Load Balancers and its implementation",
        "description": "Load Balancers are one of the most critical part of any system that has a huge amount of incoming traffic. It works like a 'traffic cop' and directs the request from client to a backend server...",
        "href": "articles/load-balancer",
        "href_title": "load-balancer",
        "img": "https://user-images.githubusercontent.com/12581295/198897728-f147240e-440b-43e7-bb28-d2866951995e.png",
        "img_alt": "load-balancer",
        "date": "29th October'2022",
        "views": "250 views",
        "keywords": "load balancers, lb in go, load balancer in go, load-balancer, load balancer implementation"
    },
    {
        "id": "5",
        "category": ["system design", "distributed systems"],
        "uid": "distributed-locks",
        "title": "How is distributed locking done?",
        "description": "Distributed locks are very crucial when you want to have different processes working with a shared resources in a mutually exclusive way. Locks as we know are very crucial to have a synchronization between different processes...",
        "href": "articles/distributed-locks",
        "href_title": "distributed-locks",
        "img": "https://user-images.githubusercontent.com/12581295/199940581-93101188-d4bc-4dd6-9cee-ad2b6fbca5f0.png",
        "img_alt": "distributed-locks",
        "date": "4th November'2022",
        "views": "200 views",
        "keywords": "distributed locks, locks in distributed systems, distributed locks using redis, distributed locks implementation in go"
    },
    {
        "id": "6",
        "category": ["system design", "distributed systems", "storage management"],
        "uid": "raid-disk-latency",
        "title": "How Discord optimises network disk for low latency",
        "description": "Discord handles 4 billion messages per day. At such a huge scale they need to support a high frequencies of queries from a million of users. The main problem they faced was the disk latency. Disk I/Os were taking few milliseconds...",
        "href": "articles/raid-disk-latency",
        "href_title": "raid-disk-latency",
        "img": "https://user-images.githubusercontent.com/12581295/203418324-c667ca99-d3d1-4557-9eec-f41c5976369b.png",
        "img_alt": "raid-disk-latency",
        "date": "22nd November'2022",
        "views": "30 views",
        "keywords": "discord low latency disks, raid levels, raid configuration in system design, raid levels to optimise read operation on disk"
    }
]